import { useEffect, useRef } from "react";

type Props = {
  toScale: number;
  toY: number;
};

export default function Preloader({ toScale, toY }: Props) {
  const rootRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    const el = rootRef.current!;
    let t0 = 0;
    let rafId = 0;

    const DUR = 2000; // общая длительность
    const DELAY = 0.2; // процент сколько держать белое в центре

    const fromScale = 0.25;
    const fromY = 0;

    const ease = (x: number) =>
      x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2;

    function clamp01(v: number) {
      return v < 0 ? 0 : v > 1 ? 1 : v;
    }

    function tick(t: number) {
      if (!t0) t0 = t;
      const p = Math.min(1, (t - t0) / DUR); // 0..1
      const e = ease(p);

      // масштаб и сдвиг
      const s = fromScale + (toScale - fromScale) * e;
      const y = fromY + (toY - fromY) * e;

      // прогресс «после задержки»: 0 до DELAY, затем 0→1
      const delayed = clamp01((e - DELAY) / (1 - DELAY));

      // цвет для маски: 255 (белый) → 0 (чёрный)
      const grey = Math.round(255 * (1 - delayed));
      // непрозрачность белой «затычки» поверх: 1 → 0
      const whiteOpacity = 1 - delayed;

      el.style.setProperty("--scale", String(s));
      el.style.setProperty("--shiftY", `${y}%`);
      el.style.setProperty("--grey", String(grey));
      el.style.setProperty("--whiteOpacity", String(whiteOpacity));

      if (p < 1) {
        rafId = requestAnimationFrame(tick);
      } else {
        // ГЛАВНОЕ: скрываем прелоадер после завершения
        el.style.display = "none";
      }
    }

    rafId = requestAnimationFrame(tick);
    return () => cancelAnimationFrame(rafId);
  }, [toScale, toY]);

  return (
    <div
      ref={rootRef}
      style={
        {
          position: "fixed",
          inset: 0,
          zIndex: 9999,
          pointerEvents: "none",
          // стартовые значения переменных
          "--scale": 0.25,
          "--shiftY": "0%",
          "--grey": 255,
          "--whiteOpacity": 1,
        } as React.CSSProperties
      }>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 2309 1877"
        preserveAspectRatio="xMidYMid slice"
        style={{
          position: "absolute",
          inset: 0,
          width: "100%",
          height: "100%",
        }}>
        <defs>
          <mask
            id="reveal"
            maskUnits="userSpaceOnUse"
            maskContentUnits="userSpaceOnUse"
            x="0"
            y="0"
            width="2309"
            height="1877">
            <rect x="0" y="0" width="2309" height="1877" fill="white" />
            <g
              style={{
                transformOrigin: "50% 50%",
                transform: "translateY(var(--shiftY)) scale(var(--scale))",
              }}>
              <path
                fill={`rgb(var(--grey), var(--grey), var(--grey))`}
                d="M144.374 224.487C159.266 198.694 191.41 202.504 210.359 203.657C343.091 211.577 440.587 141.919 528 50C625.464 -50.8645 780.296 31.8756 903.609 39.1829C1048.76 47.8151 1329.97 1.11254 1369.68 24.0363C1433.05 60.6261 1466.38 73.0741 1466.38 73.0741C1513.57 100.318 1510.16 167.47 1513.62 169.469C1528.34 177.962 1559.65 174.974 1579.3 186.319C1615.14 207.009 1570.88 256.283 1623.2 286.496C1649.22 301.514 1673.09 280.974 1687.98 255.181C1693.37 245.853 1697.97 236.003 1703.15 227.032C1723.07 192.523 1752.8 189.704 1779.88 205.339C1820.75 228.938 1852.35 295.774 1879.94 311.703C1896.99 321.548 1919.5 324.759 1936.1 334.339C1947.19 340.746 1960.07 353.823 1953.6 365.038C1948.54 373.805 1936.46 382.261 1932.37 389.346C1928.01 396.891 1938.5 404.237 1946.03 408.586C1989.25 433.538 2040.04 363.087 2081.93 387.275C2083.71 388.303 2169.36 498.713 2172.7 516.548C2173 517.673 2172.78 518.767 2172.25 519.685C2172.25 519.685 2276.7 614.789 2301.87 708.975C2302.86 724.298 2288.52 740.554 2289.52 755.877C2290.49 815.909 2321.29 896.352 2290.5 949.67C2278.79 969.958 2252.72 985.964 2251.04 988.87C2234.2 1018.03 2279.63 1070.08 2252.26 1117.48C2231.04 1154.24 2176.19 1165.66 2139.79 1185.08C2070.64 1230.8 1966.28 1372.88 1892.01 1330C1881.78 1324.09 1871.47 1316.78 1860.68 1310.55C1839.1 1298.09 1809.34 1288.04 1796.86 1309.65C1791.03 1319.75 1794.03 1330.65 1808.44 1338.97C1830.68 1351.81 1865.4 1350.58 1878.33 1358.05C1888.3 1363.81 1880.44 1384.01 1874.67 1394C1856.04 1426.27 1812.6 1448.49 1791 1485.9C1764.63 1531.58 1797.07 1538.88 1774.49 1577.98C1757.04 1608.21 1718.09 1615.49 1705.32 1637.61C1704.34 1639.29 1701.52 1698.02 1682.34 1731.25C1676.1 1742.06 1654.97 1736.93 1646.16 1731.84C1630.99 1723.09 1622.68 1702.92 1609.14 1695.11C1598.9 1689.2 1562.73 1724.46 1517.02 1698.06C1495.03 1685.37 1475.26 1663.89 1452.3 1650.64C1437.74 1642.23 1423.02 1634.82 1415.28 1648.23C1403.98 1667.8 1482.06 1725.59 1501.66 1736.9C1566.81 1774.52 1596.51 1747.42 1574.85 1784.94C1556.54 1816.65 1528.83 1784.94 1500.35 1783.25C1430.06 1781.21 1107.6 1919.7 981.914 1847.14C889.625 1793.85 933.137 1730.01 791.013 1647.95C777.523 1640.17 764.005 1632.43 750.617 1624.7C569.297 1520.01 494.106 1408.43 506.849 1386.36C512.735 1376.17 538.88 1372.03 547.562 1356.99C552.506 1348.43 550.302 1345.66 545.772 1343.04C519.2 1327.7 469.977 1413.19 421.466 1385.19C334.725 1335.11 374.244 1136.29 327.998 1027.82C301.477 963.374 238.967 927.284 190.746 874.908C152.998 838.366 139.04 786.13 103.411 745.918C-54.3195 582.741 23.7775 657.667 24.7011 474.558C24.6613 417.376 37.9009 353.181 67.5956 301.749C86.2191 269.139 111.614 241.73 144.374 224.487Z"
              />
            </g>
          </mask>
        </defs>

        <rect
          x="0"
          y="0"
          width="2309"
          height="1877"
          fill="#F6EEDD"
          mask="url(#reveal)"
        />

        <g
          style={{
            transformOrigin: "50% 50%",
            transform: "translateY(var(--shiftY)) scale(var(--scale))",
            opacity: "var(--whiteOpacity)",
          }}>
          <path
            fill="#FFFFFF"
            d="M144.374 224.487C159.266 198.694 191.41 202.504 210.359 203.657C343.091 211.577 440.587 141.919 528 50C625.464 -50.8645 780.296 31.8756 903.609 39.1829C1048.76 47.8151 1329.97 1.11254 1369.68 24.0363C1433.05 60.6261 1466.38 73.0741 1466.38 73.0741C1513.57 100.318 1510.16 167.47 1513.62 169.469C1528.34 177.962 1559.65 174.974 1579.3 186.319C1615.14 207.009 1570.88 256.283 1623.2 286.496C1649.22 301.514 1673.09 280.974 1687.98 255.181C1693.37 245.853 1697.97 236.003 1703.15 227.032C1723.07 192.523 1752.8 189.704 1779.88 205.339C1820.75 228.938 1852.35 295.774 1879.94 311.703C1896.99 321.548 1919.5 324.759 1936.1 334.339C1947.19 340.746 1960.07 353.823 1953.6 365.038C1948.54 373.805 1936.46 382.261 1932.37 389.346C1928.01 396.891 1938.5 404.237 1946.03 408.586C1989.25 433.538 2040.04 363.087 2081.93 387.275C2083.71 388.303 2169.36 498.713 2172.7 516.548C2173 517.673 2172.78 518.767 2172.25 519.685C2172.25 519.685 2276.7 614.789 2301.87 708.975C2302.86 724.298 2288.52 740.554 2289.52 755.877C2290.49 815.909 2321.29 896.352 2290.5 949.67C2278.79 969.958 2252.72 985.964 2251.04 988.87C2234.2 1018.03 2279.63 1070.08 2252.26 1117.48C2231.04 1154.24 2176.19 1165.66 2139.79 1185.08C2070.64 1230.8 1966.28 1372.88 1892.01 1330C1881.78 1324.09 1871.47 1316.78 1860.68 1310.55C1839.1 1298.09 1809.34 1288.04 1796.86 1309.65C1791.03 1319.75 1794.03 1330.65 1808.44 1338.97C1830.68 1351.81 1865.4 1350.58 1878.33 1358.05C1888.3 1363.81 1880.44 1384.01 1874.67 1394C1856.04 1426.27 1812.6 1448.49 1791 1485.9C1764.63 1531.58 1797.07 1538.88 1774.49 1577.98C1757.04 1608.21 1718.09 1615.49 1705.32 1637.61C1704.34 1639.29 1701.52 1698.02 1682.34 1731.25C1676.1 1742.06 1654.97 1736.93 1646.16 1731.84C1630.99 1723.09 1622.68 1702.92 1609.14 1695.11C1598.9 1689.2 1562.73 1724.46 1517.02 1698.06C1495.03 1685.37 1475.26 1663.89 1452.3 1650.64C1437.74 1642.23 1423.02 1634.82 1415.28 1648.23C1403.98 1667.8 1482.06 1725.59 1501.66 1736.9C1566.81 1774.52 1596.51 1747.42 1574.85 1784.94C1556.54 1816.65 1528.83 1784.94 1500.35 1783.25C1430.06 1781.21 1107.6 1919.7 981.914 1847.14C889.625 1793.85 933.137 1730.01 791.013 1647.95C777.523 1640.17 764.005 1632.43 750.617 1624.7C569.297 1520.01 494.106 1408.43 506.849 1386.36C512.735 1376.17 538.88 1372.03 547.562 1356.99C552.506 1348.43 550.302 1345.66 545.772 1343.04C519.2 1327.7 469.977 1413.19 421.466 1385.19C334.725 1335.11 374.244 1136.29 327.998 1027.82C301.477 963.374 238.967 927.284 190.746 874.908C152.998 838.366 139.04 786.13 103.411 745.918C-54.3195 582.741 23.7775 657.667 24.7011 474.558C24.6613 417.376 37.9009 353.181 67.5956 301.749C86.2191 269.139 111.614 241.73 144.374 224.487Z"
          />
        </g>
      </svg>
    </div>
  );
}
